/*=============================================================================
// Fast 2011/09/01
// Last 2011/09/01  Ver0.10                                      (c)Tsuyoshi.A
=============================================================================*/
#ifndef _MTO_STRING_H_
#define _MTO_STRING_H_

namespace MtoLib {
namespace Str {

/*========================================================
【機能】文字列分割
【引数】str  ：文字列
        delim：デリミタ
【戻値】分割された文字列
=========================================================*/
std::vector<std::string> Split(std::string str, const std::string &delim);

/*========================================================
【機能】ファイルパス分割
【引数】path ：ファイルパス
        pPwd ：保存先・ファイル位置
        pName：保存先・ファイル名
        pExt ：保存先・拡張子
【備考】不要の場合はNULLを指定してください
=========================================================*/
void SplitPath(std::string path, std::string *pPwd, std::string *pName, std::string *pExt);

/*========================================================
【機能】文字列から連番を取得
【引数】str    ：文字列
        paddNum：パディング数
        pDiv   ：区切り文字(default:"_")
        pIdx   ：連番数列開始位置の保存先(default:NULL)
【戻値】連番数列
=========================================================*/
std::string Sequence(const std::string &str, const sint32 paddNum, const char *pDiv = "_", sint32 *pIdx = NULL);

/*========================================================
【機能】数字を文字列に変換
【引数】num ：数字
        padd：パディング数
【戻値】数字の文字列
=========================================================*/
std::string itos(const sint32 num, const sint32 padd);

/*========================================================
【機能】文字列を数字に変換
【引数】str：文字列
【戻値】数字
=========================================================*/
sint32 stoi(const std::string &str);
float  stof(const std::string &str);


} // namespace Str
} // namespace MtoLib

#endif
